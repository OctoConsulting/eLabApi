package com.octo.elab.pojo.db;
// default package

// Generated Apr 1, 2017 10:50:57 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Exam generated by hbm2java
 */
@Entity
@Table(name = "exam")
public class Exam implements java.io.Serializable {

	private int id;private Case newCase;
	private ExamType examType;
	private Examiner examiner;
	private String examName;
	private Date assignedDate;
	private Date startDate;
	private Date endDate;
	private String createdBy;
	private Date createdDate;
	private String updatedBy;
	private Date updatedDate;
	private Set<Note> notes = new HashSet<Note>(0);

	public Exam() {
	}

	public Exam(int id, Case newCase, ExamType examType, String createdBy, Date createdDate, String updatedBy, Date updatedDate) {
        this.id = id;
        this.newCase = newCase;
        this.examType = examType;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.updatedBy = updatedBy;
        this.updatedDate = updatedDate;
    }

	public Exam(int id, Case newCase, ExamType examType, Examiner examiner, String examName, Date assignedDate, Date startDate, Date endDate, String createdBy, Date createdDate, String updatedBy, Date updatedDate, Set<Note> notes) {
       this.id = id;
       this.newCase = newCase;
       this.examType = examType;
       this.examiner = examiner;
       this.examName = examName;
       this.assignedDate = assignedDate;
       this.startDate = startDate;
       this.endDate = endDate;
       this.createdBy = createdBy;
       this.createdDate = createdDate;
       this.updatedBy = updatedBy;
       this.updatedDate = updatedDate;
       this.notes = notes;
    }

	@Id

	@Column(name = "_id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="case_id", nullable=false)
    public Case getCase() {
        return this.newCase;
    }

	public void setCase(Case newCase) {
        this.newCase = newCase;
    }

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exam_type", nullable = false)
	public ExamType getExamType() {
		return this.examType;
	}

	public void setExamType(ExamType examType) {
		this.examType = examType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "examiner_id")
	public Examiner getExaminer() {
		return this.examiner;
	}

	public void setExaminer(Examiner examiner) {
		this.examiner = examiner;
	}

	@Column(name = "exam_name", length = 80)
	public String getExamName() {
		return this.examName;
	}

	public void setExamName(String examName) {
		this.examName = examName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "assigned_date", length = 8)
	public Date getAssignedDate() {
		return this.assignedDate;
	}

	public void setAssignedDate(Date assignedDate) {
		this.assignedDate = assignedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", length = 8)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", length = 8)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "created_by", nullable = false, length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 8)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false, length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 8)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exam")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

}
