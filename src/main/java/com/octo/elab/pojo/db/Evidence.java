package com.octo.elab.pojo.db;
// default package

// Generated Apr 1, 2017 10:50:57 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Evidence generated by hbm2java
 */
@Entity
@Table(name = "evidence")
public class Evidence implements java.io.Serializable {

	private int id;private Case case;
	private EvidenceType evidenceType;
	private String evidenceName;
	private int evidenceNumber;
	private Boolean isForanalysis;
	private Integer parentId;
	private String createdBy;
	private Date createdDate;
	private String updatedBy;
	private Date updatedDate;
	private Set<NoteDetailEvidence> noteDetailEvidences = new HashSet<NoteDetailEvidence>(0);

	public Evidence() {
	}

	public Evidence(int id, Case case, EvidenceType evidenceType, String evidenceName, int evidenceNumber, String createdBy, Date createdDate, String updatedBy, Date updatedDate) {
        this.id = id;
        this.case = case;
        this.evidenceType = evidenceType;
        this.evidenceName = evidenceName;
        this.evidenceNumber = evidenceNumber;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.updatedBy = updatedBy;
        this.updatedDate = updatedDate;
    }

	public Evidence(int id, Case case, EvidenceType evidenceType, String evidenceName, int evidenceNumber, Boolean isForanalysis, Integer parentId, String createdBy, Date createdDate, String updatedBy, Date updatedDate, Set<NoteDetailEvidence> noteDetailEvidences) {
       this.id = id;
       this.case = case;
       this.evidenceType = evidenceType;
       this.evidenceName = evidenceName;
       this.evidenceNumber = evidenceNumber;
       this.isForanalysis = isForanalysis;
       this.parentId = parentId;
       this.createdBy = createdBy;
       this.createdDate = createdDate;
       this.updatedBy = updatedBy;
       this.updatedDate = updatedDate;
       this.noteDetailEvidences = noteDetailEvidences;
    }

	@Id

	@Column(name = "_id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="case_id", nullable=false)
    public Case getCase() {
        return this.case;
    }

	public void setCase(Case case) {
        this.case = case;
    }

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "evidence_type", nullable = false)
	public EvidenceType getEvidenceType() {
		return this.evidenceType;
	}

	public void setEvidenceType(EvidenceType evidenceType) {
		this.evidenceType = evidenceType;
	}

	@Column(name = "evidence_name", nullable = false, length = 4000)
	public String getEvidenceName() {
		return this.evidenceName;
	}

	public void setEvidenceName(String evidenceName) {
		this.evidenceName = evidenceName;
	}

	@Column(name = "evidence_number", nullable = false)
	public int getEvidenceNumber() {
		return this.evidenceNumber;
	}

	public void setEvidenceNumber(int evidenceNumber) {
		this.evidenceNumber = evidenceNumber;
	}

	@Column(name = "is_foranalysis")
	public Boolean getIsForanalysis() {
		return this.isForanalysis;
	}

	public void setIsForanalysis(Boolean isForanalysis) {
		this.isForanalysis = isForanalysis;
	}

	@Column(name = "parent_id")
	public Integer getParentId() {
		return this.parentId;
	}

	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}

	@Column(name = "created_by", nullable = false, length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 8)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false, length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 8)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evidence")
	public Set<NoteDetailEvidence> getNoteDetailEvidences() {
		return this.noteDetailEvidences;
	}

	public void setNoteDetailEvidences(Set<NoteDetailEvidence> noteDetailEvidences) {
		this.noteDetailEvidences = noteDetailEvidences;
	}

}
