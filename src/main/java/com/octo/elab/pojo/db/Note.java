package com.octo.elab.pojo.db;
// default package

// Generated Apr 1, 2017 10:50:57 PM by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Note generated by hbm2java
 */
@Entity
@Table(name = "note")
public class Note implements java.io.Serializable {

	private int id;
	private Exam exam;
	private NoteType noteType;
	private String examSubType;
	private Serializable noteData;
	private String createdBy;
	private Date createdDate;
	private String updatedBy;
	private Date updatedDate;
	private Set<NoteDetail> noteDetails = new HashSet<NoteDetail>(0);
	private Set<Image> images = new HashSet<Image>(0);

	public Note() {
	}

	public Note(int id, Exam exam, NoteType noteType, Serializable noteData, String createdBy, Date createdDate,
			String updatedBy, Date updatedDate) {
		this.id = id;
		this.exam = exam;
		this.noteType = noteType;
		this.noteData = noteData;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	public Note(int id, Exam exam, NoteType noteType, String examSubType, Serializable noteData, String createdBy,
			Date createdDate, String updatedBy, Date updatedDate, Set<NoteDetail> noteDetails, Set<Image> images) {
		this.id = id;
		this.exam = exam;
		this.noteType = noteType;
		this.examSubType = examSubType;
		this.noteData = noteData;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
		this.noteDetails = noteDetails;
		this.images = images;
	}

	@Id

	@Column(name = "_id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exam_id", nullable = false)
	public Exam getExam() {
		return this.exam;
	}

	public void setExam(Exam exam) {
		this.exam = exam;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "note_type", nullable = false)
	public NoteType getNoteType() {
		return this.noteType;
	}

	public void setNoteType(NoteType noteType) {
		this.noteType = noteType;
	}

	@Column(name = "exam_sub_type", length = 80)
	public String getExamSubType() {
		return this.examSubType;
	}

	public void setExamSubType(String examSubType) {
		this.examSubType = examSubType;
	}

	@Column(name = "note_data", nullable = false)
	public Serializable getNoteData() {
		return this.noteData;
	}

	public void setNoteData(Serializable noteData) {
		this.noteData = noteData;
	}

	@Column(name = "created_by", nullable = false, length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 8)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false, length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 8)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "note")
	public Set<NoteDetail> getNoteDetails() {
		return this.noteDetails;
	}

	public void setNoteDetails(Set<NoteDetail> noteDetails) {
		this.noteDetails = noteDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "note")
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

}
